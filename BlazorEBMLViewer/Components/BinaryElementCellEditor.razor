@using SpawnDev.BlazorJS.Toolbox
@using SpawnDev.EBML.Elements

<RadzenButton Click="OnClick" Icon="attach_file" title="From File" ButtonStyle="ButtonStyle.Dark" Size="ButtonSize.Small" />
<RadzenButton Click="Download" Icon="file_download" title="Download" ButtonStyle="ButtonStyle.Dark" Size="ButtonSize.Small" />
<RadzenButton Click="Clear" Icon="delete" Disabled="@(Element.DataSize == 0)" title="Clear" ButtonStyle="ButtonStyle.Dark" Size="ButtonSize.Small" />

@code {
    [Parameter]
    public BinaryElement Element { get; set; }

    [Parameter]
    public EventCallback OnChanged { get; set; }

    [Inject]
    DialogService DialogService { get; set; }

    async Task Download()
    {
        try
        {
            await Task.Delay(50);
            var mem = new MemoryStream();
            mem.Position = 0;
            var length = mem.Length;
            // If this is:
            // /Segment/Attachments/AttachedFile/FileData
            // then the filename is located here
            // /Segment/Attachments/AttachedFile/FileName
            var filename = Element.Parent!.ReadString("FileName");
            if (string.IsNullOrWhiteSpace(filename))
            {
                filename = $"{Element.Name}.data";
            }
            using var tmp = new Blob(new byte[][] { Element.Data.ToArray(true) });
            await tmp.StartDownload(filename);
        }
        catch
        {

        }
    }

    async Task OnClick(MouseEventArgs args)
    {
        var result = await FilePicker.ShowOpenFilePicker(multiple: false);
        var file = result?.FirstOrDefault();
        if (file == null) return;
        await Task.Delay(50);
        using var arrayBuffer = await file.ArrayBuffer();
        var bytes = arrayBuffer.ReadBytes();
        Element.Data = new SpawnDev.PatchStreams.PatchStream(bytes);
        var filename = file.Name;
        // offer to set the filename field if it exists
        var fileNameElement = Element.Parent!.First<StringElement>("FileName");
        var isMkvAttachedFile = Element.Path == @"/Segment/Attachments/AttachedFile/FileData";
        if (fileNameElement != null || isMkvAttachedFile)
        {
            var confirm = await DialogService.Confirm("Set FileName field?");
            if (confirm == true)
            {
                if (fileNameElement != null)
                {
                    fileNameElement.Data = filename;
                }
                else
                {
                    Element.Parent!.AddString("FileName", filename);
                }
            }
        }
        await OnChanged.InvokeAsync();
    }
    async Task Clear(MouseEventArgs args)
    {
        var confirm = await DialogService.Confirm("Clear data?");
        if (confirm != true) return;
        Element.Data = new SpawnDev.PatchStreams.PatchStream();
        await OnChanged.InvokeAsync();
    }
}
